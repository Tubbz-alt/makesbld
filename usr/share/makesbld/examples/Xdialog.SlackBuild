#!/bin/sh
#############################
## Build script for: Xdialog
## Creator: Peter Hyman 
## Date: 12/26/06 
## Requirements:  
##
## Notes:  
##

CONFFILE="/etc/makesbld/makesbld.conf"
if [ -a "$CONFFILE" ]; then
	source $CONFFILE
else
	echo "conf file error: $CONFFILE not found."
	exit 1
fi

NAME=Xdialog
VERSION=2.3.1
REVISION=1
BUILD=$REVISION$MYIN
DESCRIPTION="X interface for scripts"
PKG_NAME=$NAME-$VERSION-$ARCH-$BUILD.tgz

# add mirror location to SRC_LOC
# add extension to TAR_NAME and change
SRC_LOC=http://thgodef.nerim.net/xdialog
SRC_NAME=$NAME-$VERSION
SRC_EXTRACT_DIR=$SRC_NAME
TAR_NAME=$NAME-$VERSION.tar.bz2

SRC=$TMP/$SRC_EXTRACT_DIR
PKG=$TMP/package-$NAME

# default document directory
DOCDIR=$PKG/usr/doc/$SRC_NAME
SHAREDIR=$PKG/usr/share/$NAME

[ ! -n "$NAME" ] && die "error: nothing to do. nothing defined"


# retrieve source to $CWD
local_fetch() {
	fetch
	return
}

# extract source
local_unpack() {
	cd $TMP
	unpack $CWD/$TAR_NAME
	return
}

# fix source code perms or other hacks like patches as may be required
local_fix_source() {
	cd $SRC
	fix_source
	return
}

# patch source. Uncomment to use
patch() {
	# call spatch here
	# cd $SRC
	# spatch patchfile(s)
	return
}	

compile() {
	cd $SRC
	./configure $CONFIGURE_DEFAULTS	|| die "error: configure"
	make $MAKEOPTS || die "error: make"
	return
}

install() {
	cd $SRC
	make DESTDIR=$PKG install || die "error: make install"

	create_docs

	# change to PKG to do stuff
	cd $PKG

	# move things from $PKG/usr/share/doc/Xdialog-$VERSION
	# Xdialog-$VERSION = $NAME-$VERSION = $SRC_NAME!
	# to $PKG/usr/share/Xdialog
	mkdir -p usr/share/$NAME
	mv usr/share/doc/$NAME-$VERSION/* usr/share/$NAME
	rm -fr usr/share/doc

	# make install installs samples files into wrong place
	# this hack fixes it.
	# temporarily move to proper directory
	( cd usr/share/$NAME
		mkdir samples
		for file in $(ls $SRC/samples)
		do
			mv $file samples
		done
	)

	strip_bin
	strip_lib
	strip_static
	bin_perms
	gzip_man
	gzip_info
	gzip_docs		# will gzip all documents. use NOR to prevent recursion
	#gzip_misc [directory]	# will gzip files in any specified dir
	etc2new			# rename any files in /etc to filename.new

	return
}

# if a slack-desc or slack-desc.gz file exists,
# don't create this one.
make_slack_desc() {
	cd $CWD
	mkdir -p $PKG/install 
	if [ -r slack-desc ] ; then
		cp slack-desc $PKG/install
	elif [ -r slack-desc.gz ] ; then
		zcat slack-desc.gz > $PKG/install/slack-desc || die "error: zcat slack-desc.gz"
	elif [ -r slack-desc.bz2 ] ; then
		bzcat slack-desc.bz2 > $PKG/install/slack-desc || die "error: bzcat slack-desc.bz2"
	else
        cat > $PKG/install/slack-desc << END 
      |-----handy-ruler------------------------------------------------------| 
$NAME: $NAME $VERSION ($DESCRIPTION)
$NAME:
$NAME: Xdialog is designed to be a drop in replacement for the dialog and
$NAME: cdialog programs (BTW Xdialog may also be used in place of gdialog).
$NAME: It converts any terminal based program into a program with an 
$NAME: X-windows interface. The dialogs are easier to see and use and the
$NAME: new widgets adds even more functionnalities.
$NAME:
$NAME: 
$NAME: 
$NAME:
END
	fi
	# just in case, change perms and ownership
	chown root:root $PKG/install/slack-desc
	chmod 0644 $PKG/install/slack-desc
}

make_doinst() {
## if you need to make a doinst.sh file, uncomment

##	cat > $PKG/install/doinst.sh << END
## add lines for doinst.sh
## END

## add -p to the build package command below
	return
}

build_pkg() {
	# Build the package:
	cd $PKG
	## add -p to preserve doinst.sh if created above

	makepkg -l y -c n $PKG_DIR/$PKG_NAME || die "error: package creation"
	echo "$NAME has been compiled and a package created in $PKG_DIR"
	return
}

# call functions
get_args "$@"	# process command line
pkg_setup
local_fetch
local_unpack
local_fix_source
patch
compile
install
make_slack_desc
make_doinst
build_pkg
